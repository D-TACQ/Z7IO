#!/bin/sh

# currently we can't locate the real u-boot env, so we bring in a proxy..

[ -e /mnt/z7io/uboot.env ] && UBOOT_ENV=/mnt/z7io/uboot.env
[ -e /mnt/uboot.env ] && UBOOT_ENV=/mnt/uboot.env


if [ ! -z $UBOOT_ENV ] && [ -e $UBOOT_ENV ]; then
	dump-cstrings < $UBOOT_ENV |
		grep -v \\$ | grep -v ' ' | grep -v devicetree_image >/tmp/u-boot_env
		grep devicetree_acq400 /tmp/u-boot_env > /tmp/u-boot_env_tmp
		sed -e 's/devicetree_acq400/devicetree_image/' \
				/tmp/u-boot_env_tmp >> /tmp/u-boot_env
else
	echo "devicetree_image=dtb.d/z7io.dtb" >/tmp/u-boot_env
fi

echo z7io > /etc/acq400/0/MODEL
HN=$(hostname)
echo $HN > /etc/acq400/0/HN
echo $HN > /etc/acq400/0/dtsn

export SITE2BUS=3
echo $SITE2BUS >/etc/sysconfig/i2c_site2bus

[ -d /mnt/EBREAK ] && PS1="breakme1>" /bin/sh

/usr/local/CARE/load-fpga-stock
BARE=/mnt/fpga.d/Z7IO_TOP_BARE.bit.gz
if [ -e /mnt/z7io/Z7IO_TOP_BARE.bit.gz ]; then
	BARE=/mnt/z7io/Z7IO_TOP_BARE.bit.gz
	echo using patch $BARE
fi

if [ -e $BARE ]; then
	gunzip -c $BARE | xiloader -L 2>>/tmp/fpga_status
	cp /tmp/fpga_status /tmp/fpga_status_bare

# PS1="breakme2>" /bin/sh
	echo 9 > /proc/sys/kernel/printk
	/sbin/insmod /usr/local/lib/modules/i2c-xiic.ko

	MMC_MBOX_KO=/usr/local/lib/modules/mmc-mailbox-driver.ko
	[ -e /mnt/local/mmc-mailbox-driver.ko ] &&
		MMC_MBOX_KO=/mnt/local/mmc-mailbox-driver.ko
	echo /sbin/insmod $MMC_MBOX_KO
	/sbin/insmod $MMC_MBOX_KO
#/sbin/insmod /usr/local/lib/modules/mmc-mailbox-driver.ko
# PS1="breakme3>" /bin/sh
	/usr/local/CARE/load.overlay z7io_mbox_overlay


	mmcinfo >/tmp/mmcinfo1.txt
	/usr/local/CARE/Z7IO/register_mmc_fru_units /tmp/mmcinfo1.txt

        source /dev/sites/RTM/details
        if [ "$FRU_PART_NUM" = "ACQ400-MTCA-RTM-2-NG" ]; then
                echo RTM NON-GEOGRAPHICAL new
                geo=_
        else
                echo RTM GEOGRAPHICAL legacy
                geo=_geo_
        fi
# PS1="breakme4>" /bin/sh
        /usr/local/CARE/Z7IO/load.rtmi2c_overlay
        /usr/local/CARE/Z7IO/z7io_init_gpio
# PS1="breakme5>" /bin/sh
        for site in 1 2; do
                [ $(cat /dev/gpio/fmc${site}_present) -eq 1 ] &&
                        /usr/local/CARE/load.overlay z7io_rtm_elf${site}${geo}overlay
        done
	/usr/local/CARE/Z7IO/z7io_init_hwmon
# PS1="breakme6>" /bin/sh
else
	echo WARNING: $BARE did not exist, trying to continue..
fi
FMC_SCAN_FPGA=Z7IO FMC_SCAN_SITES="1 2 3" /usr/local/bin/fmc-scan
[ -d /mnt/EBREAK ] && PS1="breakme7>" /bin/sh




