#!/bin/sh

DST=${1:-$PWD/fat1}

if [ -e ../ACQ400RELEASE.M ]; then
	A4R=../ACQ400RELEASE.M
elif [ -e ../ACQ400RELEASE ] ;then
	A4R=../ACQ400RELEASE
else
	echo ERROR ../ACQ400RELEASE not found, abort
	exit 1
fi
echo using A4R: $A4R

if [ "x$DST" = "x$PWD/fat1" ]; then
	echo build own FAT image testfat.img
	nice ./make-fake-sd
fi
MOUNT=$(mount | grep $DST)
if [ $? -ne 0 ]; then
	echo ERROR: $DST not a mount point
	exit 1
fi
echo $MOUNT | grep vfat
if [ $? -ne 0 ]; then
	echo ERROR: $DST not a vfat
	exit 1
fi
LS=$(ls $DST)
if [ $? -eq 0 ]; then
	if [ -z "$LS" ]; then
		echo $DST is an empty vfat mount point .. let\'s go\!
	else
		echo ERROR $DST is NOT empty
		echo try 'rm -Rf '$DST'/*'
		exit 1
	fi
fi

echo INSTALL LOCAL $LOCAL
cp -a SD/* $DST

ESW=$(ls -t ${A4R}/REL/*.tar | head -n1)
echo INSTALL ESW $ESW
tar xvf $ESW -C $DST

echo GUNZIP rootfs.ext2.gz
(cd $DST; gunzip rootfs.ext2.gz)

FPGA=$(ls -t ${A4R}/REL/z7io*.img ${A4R}/OPT/ko/z7io*.img | head -n1)
if [ ! -e $FPGA ]; then
	echo 'ERROR: ${A4R}/*/z7io*.img not found'
	exit 1
fi
echo INSTALL FPGA $FPGA
cp $FPGA $DST/ko

RELT=$(basename $ESW)
REL=${RELT%.*}

echo CUSTOMIZE

(cd $DST; mv packages.opt/02-custom_z7io_payload_acq424-*tgz packages)

echo CREATE RELEASE tarball z7io-$REL.tgz
tar cvzf z7io-$REL.tgz -C $DST .

ls -l z7io-$REL.tgz

if [ "x$DST" = "x$DST/fat1" ]; then
	echo unmounting fat1
	unmount $DST/fat1
fi

